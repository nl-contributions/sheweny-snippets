{
	"Event": {
		"prefix": "shw:event",
		"description": "Make an event class",
		"body": [
			"import { Event } from 'sheweny';",
			"import type { ShewenyClient } from 'sheweny';",
			"",
			"export class ${1:className} extends Event {",
			"    constructor(client: ShewenyClient) {",
			"        super(client, '${2:eventName}', {",
			"            description: '${3:description}',",
			"            once: ${4:true},",
			"            emitter: client,",
			"        });",
			"    }",
			"",
			"    execute(${5:eventParameters}) {",
			"        console.log(`Logged in as ${this.client.user!.tag}`);",
			"        ${6:// Your Code here}",
			"    }",
			"}",
			""
		]
	},
	"SelectMenu": {
		"prefix": "shw:selectmenu",
		"description": "Make an select menu class",
		"body": [
			"import { SelectMenu } from 'sheweny';",
			"import type { ShewenyClient } from 'sheweny';",
			"import type { SelectMenuInteraction } from 'discord.js';",
			"",
			"export class ${1:className}extends SelectMenu {",
			"    constructor(client: ShewenyClient) {",
			"        super(client, ['${2:selectMenuId}']);",
			"    }",
			"",
			"    async execute(interaction: SelectMenuInteraction) {",
			"        await interaction.reply({ content: 'Select menu work !' });",
			"        ${3:// Your code here !}",
			"    }",
			"}",
			""
		]
	},
	"Button": {
		"prefix": "shw:button",
		"description": "Make a button class",
		"body": [
			"import { Button } from 'sheweny';",
			"import type { ShewenyClient } from 'sheweny';",
			"import type { ButtonInteraction } from 'discord.js';",
			"",
			"export class ${1:className} extends Button {",
			"    constructor(client: ShewenyClient) {",
			"        super(client, ['${2:buttonId}']);",
			"    }",
			"",
			"    async execute(interaction: ButtonInteraction) {",
			"        await interaction.reply({ content: 'Test' });",
			"        ${3:// Your code here}",
			"    }",
			"}",
			""
		]
	},
	"Inhibitor": {
		"prefix": "shw:inhibitor",
		"description": "Make an inhibitor class",
		"body": [
			"import { Inhibitor } from \"sheweny\";",
			"import type { ShewenyClient } from \"sheweny\";",
			"import type { CommandInteraction } from \"discord.js\";",
			"export class ${1:className} extends Inhibitor {",
			"  constructor(client: ShewenyClient) {",
			"    super(client, \"${2:inhibitorName}\", {",
			"      type: [\"${3:ALL}\"],",
			"    });",
			"  }",
			"",
			"  execute(client: ShewenyClient, interaction: CommandInteraction) {",
			"    return ![\"877090306103840778\"].includes(interaction.guildId!);",
			"  }",
			"",
			"  async onFailure(client: ShewenyClient, interaction: CommandInteraction) {",
			"    await interaction.reply(\"Your guild is blacklisted.\");",
			"  }",
			"};",
			""
		]
	},
	"SlashCommand": {
		"prefix": "shw:slashcommand",
		"description": "Make an slash command class",
		"body": [
			"import { Command } from \"sheweny\";",
			"import type { ShewenyClient } from \"sheweny\";",
			"import type { CommandInteraction } from \"discord.js\";",
			"",
			"export class ${1:className} extends Command {",
			"  constructor(client: ShewenyClient) {",
			"    super(client, {",
			"        type: \"SLASH_COMMAND\",",
			"        channel: \"${2:GUILD}\",",
			"        category: \"${3:category}\",",
			"        name: \"${4:Command name}\",",
			"        description: \"${5:description}\",",
			"      }",
			"    );",
			"  }",
			"",
			"  async execute(interaction: CommandInteraction) {",
			"    ${6:// Your code here}",
			"    await interaction.reply({ content: \"Pong\" });",
			"  }",
			"};",
			""
		]
	},
	"UserContextMenu": {
		"prefix": "shw:user:contextmenu",
		"description": "Make a user context menu class",
		"body": [
			"import { Command } from \"sheweny\";",
			"import type { ShewenyClient } from \"sheweny\";",
			"import type { ContextMenuInteraction } from \"discord.js\";",
			"",
			"export class ${1:className} extends Command {",
			"  constructor(client: ShewenyClient) {",
			"    super(client, {",
			"        type: \"CONTEXT_MENU_USER\",",
			"        channel: \"${2:GUILD}\",",
			"        category: \"${3:Category}\",",
			"        name: \"${4:Command Name}\",",
			"        description: \"${5:Description}\",",
			"      }",
			"    );",
			"  }",
			"",
			"  async execute(interaction: ContextMenuInteraction) {",
			"    ${6:// Your code here !}",
			"    await interaction.reply({ content: \"Pong\" });",
			"  }",
			"};",
			""
		]
	},
	"MessageContextMenu": {
		"prefix": "shw:message:contextmenu",
		"description": "Make an message context menu class",
		"body": [
			"import { Command } from \"sheweny\";",
			"import type { ShewenyClient } from \"sheweny\";",
			"import type { ContextMenuInteraction } from \"discord.js\";",
			"",
			"export class ${1:className} extends Command {",
			"  constructor(client: ShewenyClient) {",
			"    super(client, {",
			"        type: \"CONTEXT_MENU_MESSAGE\",",
			"        channel: \"${2:GUILD}\",",
			"        category: \"${3:category}\",",
			"        name: \"${4:Command name}\",",
			"        description: \"${5:description}\",",
			"      }",
			"    );",
			"  }",
			"",
			"  async execute(interaction: ContextMenuInteraction) {",
			"    ${6:// Your code here}",
			"    await interaction.reply({ content: \"Pong\" });",
			"  }",
			"};",
			""
		]
	}
}
